// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  fullname  String
  address   String
  nik       Int
  email     String   @unique
  password  String
  role      String
  createdAt DateTime @default(now())

  penalties Penalty[]
  loans     Loan[]
}

model Author {
  id          Int      @id @default(autoincrement())
  name        String
  nationality String
  biography   String
  books       Book[]
}

model Book {
  id         Int      @id @default(autoincrement())
  isbn       String
  title      String
  authorId   Int
  languageId Int
  synopsys   String
  stock      Int

  author     Author   @relation(fields: [authorId], references: [id])
  language   Language @relation(fields: [languageId], references: [id])
  genres     BookGenre[]
  loans      Loan[]
}

model Language {
  id    Int    @id @default(autoincrement())
  name  String
  books Book[]
}

model Genre {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  books       BookGenre[]
}

model BookGenre {
  bookId  Int
  genreId Int

  book    Book   @relation(fields: [bookId], references: [id])
  genre   Genre  @relation(fields: [genreId], references: [id])

  @@id([bookId, genreId])
}

model Penalty {
  id        Int      @id @default(autoincrement())
  userId    Int
  loanId    Int
  startDate DateTime
  endDate   DateTime

  user      User @relation(fields: [userId], references: [id])
  loan      Loan @relation(fields: [loanId], references: [id])
}

model Loan {
  id        Int      @id @default(autoincrement())
  bookId    Int
  userId    Int
  status    String
  startDate DateTime
  endDate   DateTime

  book      Book @relation(fields: [bookId], references: [id])
  user      User @relation(fields: [userId], references: [id])
  penalties Penalty[]
}

